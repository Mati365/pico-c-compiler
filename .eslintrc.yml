---
  extends: airbnb-typescript
  parser: '@typescript-eslint/parser'
  parserOptions:
    ecmaVersion: 6
    sourceType: module
    project: ./tsconfig.json

  settings:
    import/resolver:
      alias: {
        map: [
          ['@compiler/core', './packages/compiler-core/src/'],
          ['@compiler/lexer', './packages/compiler-lexer/src/'],
          ['@compiler/grammar', './packages/compiler-grammar/src/'],
          ['@compiler/rpn', './packages/compiler-rpn/src/'],
          ['@compiler/x86-assembler', './packages/compiler-x86-assembler/src/'],
          ['@compiler/x86-nano-c', './packages/compiler-x86-nano-c/src/'],
          ['@emulator/x86-cpu', './packages/emulator-x86-cpu/src'],
          ['@ui/context-state', './packages/ui-context-state/src'],
          ['@ui/webapp', './packages/ui-webapp/src'],
          ['@client', './src/client'],
          ['@server', './src/server']
        ],
        extensions: ['.js', '.ts', '.tsx', '.scss', '.json']
      }

  overrides:
    - files: ['*.test.ts', '*.test.tsx']
      rules:
        quotes: 0
        '@typescript-eslint/quotes': 0

  env:
    browser: true
    mocha: true

  plugins:
    - '@typescript-eslint'
    - 'jsx-a11y'
    - react-hooks
    - react
    - xss
    - import

  rules:
    max-len: ["error", 120]
    class-methods-use-this: 0
    quotes: ["error", "single"]
    import/no-default-export: [2]
    import/prefer-default-export: "off"
    react/static-property-placement:
      - "warn"
      - "static public field"
      - childContextTypes: "static getter"
        contextTypes: "static public field"
        contextType: "static public field"
        displayName: "static public field"

    no-constant-condition: ["error", {"checkLoops": false}]
    object-property-newline: 0
    lines-between-class-members: 0
    '@typescript-eslint/lines-between-class-members': 0
    max-classes-per-file: 0
    spaced-comment: 0
    react-hooks/rules-of-hooks: "error"
    nonblock-statement-body-position: 0
    jsx-quotes: ["error", "prefer-single"]
    jsx-a11y/no-static-element-interactions: 0
    jsx-a11y/label-has-for: 0
    jsx-a11y/href-no-hash: 0
    jsx-a11y/anchor-is-valid: ["warn", {"aspects": ["invalidHref"]}]
    jsx-a11y/click-events-have-key-events: 0
    jsx-a11y/mouse-events-have-key-events: 0
    '@typescript-eslint/object-curly-spacing': ["error", "never"]
    function-paren-newline: 0
    object-curly-newline: 0
    one-var: 0
    vars-on-top: 0
    curly: 0
    one-var-declaration-per-line: 0
    import/no-extraneous-dependencies: 0
    import/extensions: 0
    import/no-cycle: 0
    global-require: 0
    new-parens: 0
    guard-for-in: 0
    no-restricted-syntax: 0
    no-continue: 0
    no-param-reassign: 0
    no-bitwise: 0
    no-plusplus: 0
    no-underscore-dangle: 0
    no-console: ["error", {"allow": ["warn", "error", "info"]}]
    no-use-before-define: 0
    no-unused-expressions: ["error", {"allowTaggedTemplates": true, "allowShortCircuit": true}]
    react/destructuring-assignment: 0
    react/forbid-prop-types: 0
    react/prefer-stateless-function: [1, {"ignorePureComponents": true}]
    camelcase: ["error", {allow: ["^UNSAFE_"], properties: "never"}]
    react/state-in-constructor: 0
    react/no-unused-state: 0
    react/no-find-dom-node: 0
    react/no-did-mount-set-state: 0
    react/require-default-props: 0
    react/no-unused-prop-types: 0
    react/no-multi-comp: 0
    react/no-danger: 0
    react/prop-types: 0
    react/jsx-props-no-spreading: 0
    react/sort-comp:
      - 1
      - order: [
          "static-methods",
          "lifecycle",
          "everything-else",
          "render"
        ]
        groups:
          lifecycle: [
            "displayName",
            "propTypes",
            "contextTypes",
            "childContextTypes",
            "mixins",
            "defaultProps",
            "statics",
            "static-variables",
            "getDefaultProps",
            "state",
            "instance-variables",
            "constructor",
            "getInitialState",
            "getChildContext",
            "getDerivedStateFromProps",
            "componentWillMount",
            "UNSAFE_componentWillMount",
            "componentDidMount",
            "UNSAFE_componentWillReceiveProps",
            "UNSAFE_UNSAFE_componentWillReceiveProps",
            "shouldComponentUpdate",
            "componentWillUpdate",
            "UNSAFE_componentWillUpdate",
            "getSnapshotBeforeUpdate",
            "componentDidUpdate",
            "componentDidCatch",
            "componentWillUnmount"
          ]
